spring:
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=MySQL
    driver-class-name: org.h2.Driver
    username: sa
    password:

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    hibernate:
      ddl-auto: update

  config:
    import: optional:file:.env[.properties]

  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      repositories:
        enabled: false

jwt:
  secret:
    key: ${JWT_SECRET_KEY}

payment:
  toss:
    test-client-api-key: ${PAYMENT_CLIENT_API_KEY}
    test-secret-api-key: ${PAYMENT_SECRET_API_KEY}
    payment-url: ${PAYMENT_URL}

rabbitmq:
  queue:
    name: ${RABBITMQ_QUEUE_NAME}
    dead-letter-exchange: ${RABBITMQ_DEAD_LETTER_EXCHANGE_NAME}
    dead-letter-routing-key: ${RABBITMQ_DEAD_LETTER_ROUTING_KEY}
  exchange:
    name: ${RABBITMQ_EXCHANGE_NAME}
  routing:
    key: ${RABBITMQ_ROUTING_KEY}
  dlq:
    name: ${RABBITMQ_DEAD_LETTER_QUEUE_NAME}
